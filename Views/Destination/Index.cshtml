@model IEnumerable<TravelWebsite.Models.Destination>

@{ 
    ViewData["Title"] = "Điểm đến";
}

<!-- Link stylesheet cho trang điểm đến -->
<link rel="stylesheet" href="~/css/destination.css" asp-append-version="true" />

<!-- Banner -->
<div class="destination-banner text-white py-5 mb-5">
    <div class="container py-3">
        <div class="row align-items-center">
            <div class="col-lg-7">
                <h1 class="display-4 fw-bold destination-title">Khám phá điểm đến</h1>
                <p class="lead opacity-90 destination-subtitle">Những điều kỳ diệu đang chờ bạn khám phá trên khắp thế giới</p>
                
                <!-- Tìm kiếm -->
                <div class="mt-4 pt-2">
                    <div class="input-group">
                        <input type="text" class="form-control form-control-lg" id="searchDestination" placeholder="Tìm kiếm điểm đến...">
                        <button class="btn btn-light" type="button">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-lg-5 text-center text-lg-end mt-4 mt-lg-0">
                <a asp-action="Create" class="btn btn-light btn-lg destination-button">
                    <i class="bi bi-plus-circle me-2"></i>Thêm điểm đến mới
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Điểm đến phổ biến -->
<div class="container py-4">
    <div class="row mb-4">
        <div class="col-lg-8">
            <h2 class="fw-bold">Điểm đến phổ biến</h2>
            <p class="text-muted">Khám phá những địa điểm được yêu thích nhất của chúng tôi</p>
        </div>
        <div class="col-lg-4 text-end">
            <a href="#" class="btn btn-outline-primary">Xem tất cả <i class="bi bi-arrow-right"></i></a>
        </div>
    </div>

    <!-- Hiển thị trống nếu không có điểm đến -->
    @if (!Model.Any())
    {
        <div class="empty-state py-5">
            <i class="bi bi-map display-1"></i>
            <h3 class="mt-3">Chưa có điểm đến nào</h3>
            <p class="text-muted">Hãy thêm điểm đến đầu tiên để bắt đầu cuộc phiêu lưu của bạn!</p>
            <a asp-action="Create" class="btn btn-primary mt-2">Thêm điểm đến</a>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var item in Model.Where(d => d.IsPopular).Take(6))
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="position-relative">
                            @if (string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="https://source.unsplash.com/600x400/?travel,@(item.Name)" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
                            }
                            else
                            {
                                <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
                            }
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h5 class="card-title mb-0">@item.Name</h5>
                                <span class="badge bg-primary">@item.Rating.ToString("0.00") <i class="bi bi-star-fill"></i></span>
                            </div>
                            <p class="card-text text-muted mb-2">@item.Country, @item.City</p>
                            <p class="card-text small">@(item.Description != null && item.Description.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)</p>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                Xem chi tiết
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Destinations by Country - Display like tabs -->
<div class="container py-5 bg-light mt-5">
    <h2 class="fw-bold mb-4">Điểm đến theo quốc gia</h2>
    
    <ul class="nav nav-tabs" id="countryTabs" role="tablist">
        @{
            var countries = Model.Select(d => d.Country).Distinct().Take(5).ToList();
            for (int i = 0; i < countries.Count; i++)
            {
                var country = countries[i];
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(i == 0 ? "active" : "")" id="@country-tab" data-bs-toggle="tab" 
                            data-bs-target="#@country-tab-pane" type="button" role="tab" 
                            aria-controls="@country-tab-pane" aria-selected="@(i == 0 ? "true" : "false")">
                        @country
                    </button>
                </li>
            }
        }
    </ul>
    
    <div class="tab-content" id="countryTabsContent">
        @{
            for (int i = 0; i < countries.Count; i++)
            {
                var country = countries[i];
                <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="@country-tab-pane" role="tabpanel" 
                     aria-labelledby="@country-tab" tabindex="0">
                    <div class="row mt-4">
                        @foreach (var item in Model.Where(d => d.Country == country).Take(3))
                        {
                            <div class="col-md-4 mb-4">
                                <div class="card h-100">
                                    <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? $"https://source.unsplash.com/600x400/?{item.Name}" : item.ImageUrl)" 
                                         class="card-img-top" alt="@item.Name" style="height: 180px; object-fit: cover;">
                                    <div class="card-body">
                                        <h5 class="card-title">@item.Name</h5>
                                        <p class="card-text small">@(item.Description?.Substring(0, Math.Min(80, item.Description.Length)) ?? "")</p>
                                        <a href="#" class="btn btn-sm btn-outline-primary">Xem thêm</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>

<!-- Bổ sung JavaScript để xử lý bộ lọc -->
@section Scripts {
    <script src="~/js/destination.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function() {
            // Xử lý bộ lọc
            function filterDestinations() {
                const country = $('#countryFilter').val().toLowerCase();
                const rating = $('#ratingFilter').val();
                const popular = $('#popularFilter').is(':checked');

                $('.destination-item').each(function() {
                    const itemCountry = $(this).data('country');
                    const itemRating = $(this).data('rating');
                    const itemPopularity = $(this).data('popularity');

                    let show = true;
                    
                    if (country && itemCountry !== country) show = false;
                    if (rating && itemRating < rating) show = false;
                    if (popular && itemPopularity < 9) show = false;
                    
                    $(this).toggle(show);
                });
            }

            // Gắn sự kiện cho các thay đổi bộ lọc
            $('#countryFilter, #ratingFilter').change(filterDestinations);
            $('#popularFilter').click(filterDestinations);

            // Xử lý sắp xếp
            $('#sortFilter').change(function() {
                const sortValue = $(this).val();
                const destinations = $('.destination-item').get();
                
                destinations.sort(function(a, b) {
                    if (sortValue === 'nameAsc') {
                        return $(a).find('.card-title').text().localeCompare($(b).find('.card-title').text());
                    } else if (sortValue === 'nameDesc') {
                        return $(b).find('.card-title').text().localeCompare($(a).find('.card-title').text());
                    } else if (sortValue === 'ratingDesc') {
                        return $(b).data('rating') - $(a).data('rating');
                    } else if (sortValue === 'ratingAsc') {
                        return $(a).data('rating') - $(b).data('rating');
                    }
                });
                
                const container = $('#destinationsContainer');
                $.each(destinations, function(i, item) {
                    container.append(item);
                });
            });
        });
    </script>
}